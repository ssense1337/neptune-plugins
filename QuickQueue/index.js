var c=n=>n?.nodeType===Node.ELEMENT_NODE;import{actions as d,store as p,intercept as f}from"@neptune";import{ReactiveRoot as Q}from"@neptune/components";import{$ as A,html as _,useMemo as b,useCleanup as k}from"@neptune/voby";var u=new Map,I=()=>[f(["playQueue/ADD_LAST","playQueue/ADD_NEXT"],([{mediaItemIds:n}])=>{n.forEach(e=>{u.has(e)&&u.get(e)(!0)})}),f("playQueue/REMOVE_ELEMENT",([{uid:n}])=>{let e=p.getState().playQueue,t=e.currentIndex;for(let o=t+1;o<e.elements.length&&e.elements[o].priority==="priority_keep";o++)if(e.elements[o].uid===n){let r=e.elements[o].mediaItemId;u.has(r)&&u.get(r)(!1);return}}),f("playbackControls/MEDIA_PRODUCT_TRANSITION",([{playbackContext:n}])=>{let e=n.actualProductId,t=p.getState().playQueue,o=t.currentIndex;for(let r=o+1;r<t.elements.length&&t.elements[r].priority==="priority_keep";r++)if(t.elements[r].mediaItemId===e)return;u.has(e)&&u.get(e)(!1)})],g=n=>{let e=n.attributes,t={};for(let o=0;o<e.length;o++){let r=e[o];t[r.name]=r.value}return t},N=(n,e)=>{let t=A(!1),{elements:o,currentIndex:r}=p.getState().playQueue;for(let s=r+1;s<o.length&&o[s].priority==="priority_keep";s++)o[s].mediaItemId===e&&t(!0);u.set(e,t),k(()=>u.delete(e));let a=b(()=>"#"+(t()?"detail-view__trashcan":"player__queue-add")),i=b(()=>t()?"Remove from queue":"Add to queue"),m=n.querySelector('button[data-test="add-to-playlist-button"]');if(!m)return null;let q=g(m),v=g(m.querySelector("svg"));return _`
        <button
            ...${q}
            data-test="quick-queue"
            aria-label=${i}
            title=${i}
            style="padding: 4px;"
            onClick=${async()=>{let{elements:s,currentIndex:x}=p.getState().playQueue;for(let l=x+1;l<s.length&&s[l].priority==="priority_keep";l++)if(s[l].mediaItemId===e){d.playQueue.removeAtIndex({index:l}),d.message.messageInfo({message:"Removed from play queue"}),t(!1);return}d.playQueue.addLast({mediaItemIds:[e],context:{type:"user"}}),d.message.messageInfo({message:"Added to play queue"}),t(!0)}}
        >
            <svg ...${v}>
                <use href=${a}></use>
            </svg>
        </button>
    `},S=(n,e,t,o,r)=>{let a=n.querySelector(`button[data-test="${e}"]`);if(a!==null)return;let i=n.querySelector(t);if(i!==null&&(a=o,c(a)))return i.parentElement.insertBefore(a,r instanceof Element?r:r?n.querySelector(r):i)},E=(n,e)=>{S(n,"quick-queue",'button[data-test="add-to-playlist-button"]',Q({children:()=>N(n,Number(e))}),'button[data-test="add-to-playlist-button"]')};var h=[],y=new MutationObserver(n=>{for(let e of n)if(e.type==="childList"){for(let t of e.addedNodes)if(c(t)){let o=t.querySelectorAll('div[data-test="tracklist-row"]');o.length!==0&&T(o)}}}),T=async n=>{for(let e of n){let t=e.getAttribute("data-track-id");if(t==null)return;E(e,t)}},M=()=>{y.disconnect(),y.observe(document.body,{childList:!0,subtree:!0})};M();h.push(...I());var P=()=>{h.forEach(n=>n()),y.disconnect()};export{P as onUnload,M as updateObserver};

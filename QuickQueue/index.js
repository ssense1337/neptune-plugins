var d=e=>e?.nodeType===Node.ELEMENT_NODE;import{actions as c}from"@neptune";var l=(e,o,t,r,u)=>{let n=e.querySelector(`button[data-test="${o}"]`);if(n!==null)return;let s=e.querySelector(t);if(s!==null&&(n=s?.cloneNode(!0),d(n)))return n.setAttribute("data-test",o),n.querySelector("use").setAttribute("href",`#${r}`),s.parentElement.insertBefore(n,u instanceof Element?u:u?e.querySelector(u):s)},i=(e,o)=>{let t=l(e,"Quick Queue",'button[data-test="add-to-playlist-button"]',"player__queue-add",'button[data-test="add-to-playlist-button"]');t?.style.setProperty("padding","4px"),t?.setAttribute("aria-label","Add to queue"),t?.setAttribute("title","Add to queue"),t?.addEventListener("click",async()=>{c.playQueue.addNext({mediaItemIds:[o],context:{type:"user"}})})};var a=new MutationObserver(e=>{for(let o of e)if(o.type==="childList"){for(let t of o.addedNodes)if(d(t)){let r=t.querySelectorAll('div[data-test="tracklist-row"]');r.length!==0&&p(r)}}}),p=async e=>{for(let o of e){let t=o.getAttribute("data-track-id");if(t==null)return;i(o,t)}},m=()=>{a.disconnect(),a.observe(document.body,{childList:!0,subtree:!0})};m();var x=()=>{a.disconnect()};export{x as onUnload,m as updateObserver};
